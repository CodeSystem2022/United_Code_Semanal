<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>90</x><y>80</y><w>260</w><h>240</h></coordinates><panel_attributes>Orden
--
idOrden: number
productos[]: Producto
contadorProductosAgregados: number
_contadorOrdenes: number_
_MAX_PRODUCTOS: number = 5_
--
Orden()
agregarProducto(producto)
calcularTotal(): number
mostrarOrden()
--
Responsabilidades
-- Crear objetos Orden
-- Administrar los productos de una orden</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>560</x><y>80</y><w>210</w><h>140</h></coordinates><panel_attributes>VentasTest
--
Esto no es una clase.
Es la prueba de creación de
objetos Producto y Orden
--
Responsabilidades
-- Ejecutar la prueba de la
aplicación de Ventas</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>430</y><w>260</w><h>250</h></coordinates><panel_attributes>Producto
--
idProducto: number
nombre: string
precio: number
_contadorProductos: number_
--
Producto()
getIdProducto(): number
getNombre(): string
setNombre(nombre)
getPrecio(): number
setPrecio(precio)
toString(): string
--
Responsabilidades
-- Crear objetos de tipo Producto</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>210</x><y>310</y><w>240</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
&lt;&lt;Un Producto se agrega a una Orden&gt;&gt;</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>130</y><w>240</w><h>30</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;220;10</additional_attributes></element></diagram>